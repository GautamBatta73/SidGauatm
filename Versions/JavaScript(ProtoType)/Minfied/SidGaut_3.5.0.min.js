let main=document.querySelector("main");function though(e,t){if("boolean"!=typeof e)throw new Error("'boolean' must be a boolean statement in though(boolean)");if("function"!=typeof t)throw new Error("Body was not correctly defined in though(boolean)");for(;!e;)e=t()}function doThough(e,t){if("function"!=typeof e)throw new Error("Body was not correctly defined in doThough({},boolean)");if("boolean"!=typeof t)throw new Error("'boolean' must be a boolean statement in doThough({},boolean)");do{t=e()}while(!t)}function until(e,t,n,o){if("number"!=typeof e)throw new Error("start must be a number in until(start,end,increment)");if("number"!=typeof t)throw new Error("end must be a number in until(start,end,increment)");if("number"!=typeof n)throw new Error("increment must be a number in until(start,end,increment)");if("function"!=typeof o)throw new Error("Body was not correctly defined in until(start,end,increment)");for(;e!=t;)o(),e+=n}function doUntil(e,t,n,o){if("function"!=typeof e)throw new Error("Body was not correctly defined in doUntil({}, start,end,increment)");if("number"!=typeof t)throw new Error("start must be a number in doUntil({}, start,end,increment)");if("number"!=typeof n)throw new Error("end must be a number in doUntil({}, start,end,increment)");if("number"!=typeof o)throw new Error("increment must be a number in doUntil({}, start,end,increment)");do{e(),t!=n&&(t+=o)}while(t!=n)}function repeat(e,t){if("number"!=typeof e)throw new Error("'number' must be a number, for repeat(number)");if("function"!=typeof t)throw new Error("Body was not correctly defined, for repeat(number)");for(let n=1;n<=e;n++)t()}function showln(e){let t=main.lastElementChild;void 0===e?(t.innerHTML+="<br>",main.appendChild(t)):-1!==t.innerHTML.substring("<br>")?t.append(`${e}`):t.textContent=`${e}`;let n=document.createElement("p");main.appendChild(n)}function show(e){let t=main.lastElementChild;-1!==t.innerHTML.substring("<br>")?t.append(`${e}`):t.textContent=`${e}`}function showErr(e){let t=document.createElement("p");t.style.color="red",t.append(`${e}`),main.appendChild(t)}function print(e){console.log(`${e}`)}function printErr(e){console.error(`${e}`)}function getVal(e){if(e instanceof HTMLInputElement)return e.value;throw new Error("Parameter must be an element that can have a value for getVal(Element).")}function getEl(e,t){if("string"!=typeof e)throw new Error("First parameter must be an html element as a string, for getEl(Element, index).");if(void 0!==t&&"number"!=typeof t)throw new Error("Second parameter must be a number for getEl(Element, index).");{let n=document.querySelectorAll(e).length;if(void 0===t){if(n>1)return document.querySelectorAll(e)}else{if(t>=n)throw new Error(`Second parameter must be a less than ${n}, for getEl(Element, index).`);if(n>1)return document.querySelectorAll(e)[t]}if(1===n)return document.querySelector(e)}}function addEl(e,t){if("string"!=typeof e)throw new Error("'element' must be an html element as a string, for addEl(element).");{let n=document.createElement(e);return t instanceof Element?(t.appendChild(n),n):n}}function getText(e,t){if(void 0===t&&(t=!1),"boolean"!=typeof t)throw new Error("Second parameter must be a boolean that indicates if the output should be html or not, for getText(Element, html).");if(e instanceof Element)return t?e.innerHTML:e.textContent;throw new Error("First parameter must be an element that can have text, for getText(Element, html).")}function getClass(e){if(e instanceof Node||e instanceof NodeList){if(e instanceof Node)return e.className;{let t=new Array;return e.forEach((e=>{t.push(e.className)})),t}}throw new Error("'element' must be an Element or Element Array for getClass(element).")}function getID(e){if(e instanceof Element)return e.id;throw new Error("'element' must be an html element, for getID(element).")}null!==main&&"null"!==main||(main=document.querySelector("body>script").parentElement.insertBefore(document.createElement("main"),document.querySelector("body>script"))),null!==document.querySelector("main>p")&&"null"!==document.querySelector("main>p")||main.appendChild(document.createElement("p")),Element.prototype.css=function(e,t){if("string"!=typeof t||"string"!=typeof e)throw new Error("Property and Value in Element.css(property, value) must be strings.");this.style[e]=`${t}`},HTMLInputElement.prototype.setVal=function(e){this.value=`${e}`},Element.prototype.setText=function(e,t){if(void 0===t&&(t=!1),"boolean"!=typeof t)throw new Error("Second parameter must be a boolean that indicates if there is html or not in the first parameter, for Element.setText(text, html).");if(t)this.innerHTML="",this.innerHTML=`${e}`;else{this.textContent="";let t=document.createTextNode(`${e}`);this.appendChild(t)}},Element.prototype.appendText=function(e,t){if(void 0===t&&(t=!1),"boolean"!=typeof t)throw new Error("Second parameter must be a boolean that indicates if there is html or not in the first parameter, for Element.setText(text, html).");if(t)this.innerHTML+=`${e}`;else{let t=document.createTextNode(`${e}`);this.appendChild(t)}},Node.prototype.delEl=function(){this.remove()},NodeList.prototype.delEl=function(){this.forEach((e=>e.remove()))},Node.prototype.setClass=function(e){if("string"!=typeof e)throw new Error("'className' must be a string for Element.setClass(className).");this.setAttribute("class",e)},NodeList.prototype.setClass=function(e){if("string"!=typeof e)throw new Error("'className' must be a string for Element.setClass(className).");this.forEach((t=>t.setAttribute("class",e)))},Element.prototype.setID=function(e){if("string"!=typeof e)throw new Error("'idName' must be a string for Element.setID(idName).");this.id=e};class Label{labelFN=null;constructor(e){"function"==typeof e?this.createLabel(e):this.labelFN=void 0}createLabel(e){if("function"!=typeof e)throw new Error("Body was not correctly defined in createLabel.");this.labelFN=e,e()}}function goto(e){if(!(e instanceof Label))throw new Error("The goto function must only be used to call Label objects.");if("function"!=typeof e.labelFN)throw new Error("The label object must have a created label before you can use goto(): LabelInstance.createLabel({})");e.labelFN()}function unless(e,t,n){if("boolean"!=typeof e)throw new Error("'boolean' must be a boolean statement in unless(boolean)");if("function"!=typeof t)throw new Error("Body was not correctly defined in unless(boolean)");if(void 0===n||"undefined"===n)e||t();else{if("function"!=typeof n)throw new Error("else body was not correctly defined in unless(boolean,{},[else]{})");e?n():t()}}function dont(e){let t=window.open("","_self"),n=window.open("https://i.imgur.com/eGdI1T5.png");setTimeout((()=>{t.close(),n.close()}),1e3)}function doNot(e){}function delay(e,t){if("number"!=typeof e)throw new Error("'number' must be a number in seconds, for delay(number)");if("function"!=typeof t)throw new Error("Body was not correctly defined, for delay(number)");setTimeout((()=>t()),1e3*e)}
